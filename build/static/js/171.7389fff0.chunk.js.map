{"version":3,"file":"static/js/171.7389fff0.chunk.js","mappings":"yIAGA,MAAMA,EAAOC,IACZ,MAAM,SAAEC,EAAF,UAAYC,EAAZ,WAAuBC,EAAvB,eAAmCC,EAAnC,WAAmDC,EAAnD,cAA+DC,GAAkBN,EAEvF,OACC,gBAAKE,UAAS,UAFiBG,EAAa,SAAW,YAEzC,YAA4BH,EAA5B,YAAyCI,EAAe,QAAUA,EAAgB,GAAlF,YAAwFH,EAAY,eAAiBA,EAAY,GAAjI,YAAuIC,EAAgB,mBAAqBA,EAAgB,IAA1M,SACEH,GAFH,EAeDF,EAAKQ,aAAe,CACnBF,YAAY,EACZC,cAAe,MACfJ,UAAW,IAIZ,S,qEC1BO,MAAMM,UAAaC,EAAAA,UACzBC,SACC,MAAM,KAAEC,EAAF,UAAQT,GAAeU,KAAKZ,MAClC,OACC,8BAAGa,EAAAA,cAAoBF,EAAM,CAAET,UAAWA,KAE3C,EAGF,S,8LCRA,MASA,EAToB,IAAuB,IAAtB,GAAEY,EAAF,SAAMC,GAAe,EAEzC,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KAERC,EAAYF,EAAEF,EAAIC,GAExB,OAAO,8BAAGG,GAAV,E,iFCHD,MA2KA,EAJyB,IAvKA,CAAC,CACxBC,IAAK,aACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,eACJC,MAAO,GACPC,KAAMC,EAAAA,EACNC,YAAY,EACZC,cAAc,EAEdC,QAAS,CACP,CACER,IAAK,qBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,uBACJC,MAAO,4BACPC,KAAMC,EAAAA,EACNC,YAAY,EACZE,QAAS,IAqBX,CACER,IAAK,iBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,mBACJC,MAAO,yBACPC,KAAMK,EAAAA,EACNH,YAAY,EACZE,QAAS,CACP,CACER,IAAK,6BACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,gCACJC,MAAO,qCACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAEX,CACER,IAAK,4BACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,+BACJC,MAAO,oCACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAEX,CACER,IAAK,6BACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,mCACJC,MAAO,qCACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAEX,CACER,IAAK,wBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,0BACJC,MAAO,gCACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAGX,CACER,IAAK,OACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,SACJC,MAAO,oBACPC,KAAMM,EAAAA,EACNJ,YAAY,EACZE,QAAS,MAQf,CACER,IAAK,QACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,UACJC,MAAO,gBACPC,KAAMO,EAAAA,EACNL,YAAY,EACZC,cAAc,EACdC,QAAS,CACP,CACER,IAAK,cACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,UACJC,MAAO,gBACPC,KAAMQ,EAAAA,EACNN,YAAY,EACZE,QAAS,CACP,CACER,IAAK,sBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,kBACJC,MAAO,wBACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAEX,CACER,IAAK,mBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,oBACJC,MAAO,yBACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAEX,CACER,IAAK,sBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,kBACJC,MAAO,wBACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAEX,CACER,IAAK,sBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,kBACJC,MAAO,wBACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAEX,CACER,IAAK,kBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,cACJC,MAAO,oBACPC,KAAM,GACNE,YAAY,EACZE,QAAS,IAEX,CACER,IAAK,sBACLC,KAAK,GAAD,OAAKC,EAAAA,GAAL,kBACJC,MAAO,wBACPC,KAAM,GACNE,YAAY,EACZE,QAAS,Y,yBClJvB,MAAM,cAAEK,GAAkBC,EAAAA,GAEpBC,EAAY,SAACC,GAAD,IAAYC,IAAZ,gEACjBA,GAAa,SAAC,EAAD,CAAatB,GAAIqB,IAAgBA,EAAUE,UADvC,EAGZC,EAAkBnB,IACvB,IAAIoB,EAAU,GACVC,EAAY,GAChB,GAAIrB,EAAK,CACR,MAAMsB,EAAMtB,EAAIuB,MAAM,KACtB,IAAK,IAAIC,EAAQ,EAAGA,EAAQF,EAAIG,OAAQD,IAAS,CAChD,MAAME,EAAMJ,EAAIE,GACDH,EAAL,IAAVG,EAA2BE,EAAiB,UAAML,EAAN,YAAmBK,GAC/DN,EAAQO,KAAKN,EACb,CACD,CACD,OAAOD,CAAP,EAGKQ,EAAW,IAA0B,IAAzB,MAACzB,EAAD,KAAQC,EAAR,KAAcH,GAAU,EAEzC,MAAM4B,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,cAAoBnB,KAAiBoB,SAAS,MAQhE,OACC,gCACE7B,IAAQ,SAACf,EAAA,EAAD,CAAMG,KAAMY,KACrB,0BAAOW,EAAUZ,KAChBF,IAAQ,SAAC,KAAD,CAAMiC,QAVM,KAClBH,GACHF,GAASM,EAAAA,EAAAA,KAAkB,GAC3B,EAOwCC,GAAInC,MAJ9C,EASKoC,EAAsBC,GAAYA,EAAQC,KAAIC,IAC5C,CACNxC,IAAKwC,EAAIxC,IACTyC,OAAO,SAACb,EAAD,CAAUzB,MAAOqC,EAAIrC,SAAYqC,EAAIjC,aAAe,CAAC,EAAI,CAACN,KAAMuC,EAAIvC,KAAMG,KAAMoC,EAAIpC,WACvFoC,EAAIjC,aAAe,CAACf,KAAM,SAAW,CAAC,KACtCgD,EAAIhC,QAAQiB,OAAS,EAAI,CAAC3C,SAAUuD,EAAmBG,EAAIhC,UAAY,CAAC,MAIxEkC,EAAqBJ,GAAYA,EAAQC,KAAIC,IAC3C,CACNxC,IAAKwC,EAAIxC,IACTyC,OAAO,SAACb,EAAD,CAAUzB,MAAOqC,EAAIrC,MAAOC,KAAMoC,EAAIpC,QAAWoC,EAAIjC,aAAe,CAAC,EAAI,CAACN,KAAMuC,EAAIvC,WACvFuC,EAAIhC,QAAQiB,OAAS,EAAI,CAAC3C,SAAU4D,EAAkBF,EAAIhC,UAAY,CAAC,MAIvEmC,EAAkB9D,IAEvB,MAAM,UAAE+D,EAAF,eAAaC,GAAmBhE,EAEhCiE,GAAeC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMH,eAEhDI,GAAYC,EAAAA,EAAAA,UAAQ,IAAMd,EAAmBe,IAAmB,IAEtE,OACC,SAAC,IAAD,CACCC,KAAK,SACLJ,MAAOH,IAAiBQ,EAAAA,GAAiB,QAAU,OACnDC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,QAACd,QAAD,IAACA,OAAD,EAACA,EAAW5C,KACjC2D,gBAAiBxC,EAAc,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAW5C,KAC3CjB,UAAW8D,EAAiB,mBAAqB,GACjDe,MAAOV,GART,EAaKW,EAAgB,KAErB,MAAMC,GAAcf,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMa,cAE/CZ,GAAYC,EAAAA,EAAAA,UAAQ,IAAMT,EAAkBU,IAAmB,IAErE,OACC,SAAC,IAAD,CACCC,KAAK,aACLE,MAAO,CAAEQ,gBAAiBD,GAC1BF,MAAOV,GAJT,EAiBD,EARqBrE,GACbA,EAAMW,OAASwE,EAAAA,IACrB,SAACrB,EAAD,IAAoB9D,KAEpB,SAACgF,EAAD,IAAmBhF,KCrGf,MAAEoF,GAAUC,EAAAA,EAyBlB,GAAeC,EAAAA,EAAAA,KALS,IAAgB,IAAf,MAAElB,GAAY,EACrC,MAAM,aAAEmB,EAAF,aAAgBtB,GAAkBG,EACxC,MAAO,CAAEmB,eAActB,eAAvB,GAGF,EAvBuB,IAA+D,IAA9D,aAACsB,EAAD,aAAetB,EAAf,UAA6BF,EAA7B,eAAwCC,GAAqB,EACnF,MAAMhE,EAAQ,CAAEiE,eAAcF,YAAYC,kBAC1C,OACE,SAACoB,EAAD,CACElF,UAAS,mBAAc+D,IAAiBuB,EAAAA,GAAe,gBAAkB,IACzEC,MAAOC,EAAAA,GACPC,UAAWJ,EAHb,UAKE,SAAC,KAAD,CAAYK,UAAQ,EAApB,UACE,SAAC,EAAD,CACEjF,KAAMwE,EAAAA,MACFnF,OATZ,ICcF,GAAesF,EAAAA,EAAAA,KALS,IAAgB,IAAf,MAAElB,GAAY,EACrC,MAAM,YAAEa,GAAiBb,EACzB,MAAO,CAAEa,cAAT,GAGF,EAnBsB,IAAqB,IAApB,YAACA,GAAkB,EACzC,MAAMjF,EAAQ,CAAEiF,eAChB,OACC,gBAAK/E,UAAS,kBAAaiD,EAAAA,EAAAA,iBAAuB8B,IAAgBP,MAAO,CAACQ,gBAAiBD,GAA3F,UACC,gBAAK/E,UAAU,kBAAf,UACC,SAAC,EAAD,CACCS,KAAMkF,EAAAA,MACF7F,OALR,I,0BCDD,MAAQgC,cAAF,GAAoBC,EAAAA,GAwD1B,EAtDoB,IAA+B,IAA9B,WAAE6D,EAAF,SAAcC,GAAe,EAEjD,MAAM7C,GAAYC,EAAAA,EAAAA,cAAoBnB,KAAiBoB,SAAS,MAE1DmC,GAAerB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMmB,eAChDS,GAAU9B,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAM4B,UAwCjD,OACC,gBACC9F,UATEgD,IAAa4C,EACR,SAEA,OAOPpB,MAAO,CAACe,MAAM,GAAD,OAzCY,MAC1B,MAAMQ,EAAWD,IAAYH,EAAAA,GAC7B,OAAG3C,IAAa4C,EACR,EAELG,EACK,OAGD,GAAN,OADEV,EACQW,EAAAA,GAEAR,EAAAA,GAFV,KAGA,EA6BkBS,KAFnB,UAGC,gBAAKC,IAzBU,UAAbL,EAEK,sBAKJR,EACI,mBAED,gBAeec,IAAG,UAAKC,EAAAA,GAAL,SAAsB5B,MAAO,CAACe,MAAM,WAJ9D,E,0BC3CM,MAyCP,EAzCyB,IAGlB,IAHmB,UACzB1B,EADyB,eAEzBC,GACK,EAEL,MAAMhB,GAAWC,EAAAA,EAAAA,MAEXgB,GAAeC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMH,eAChDsC,GAAYrC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMmC,YAE7CC,EAAmB,CAAEvC,eAAcF,YAAWC,kBAE9CyC,EAAU,KACfzD,GAASM,EAAAA,EAAAA,KAAkB,GAA3B,EAGD,OACC,SAAC,IAAD,CACCoD,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,KAAML,EACNM,UAAW,CAAEC,QAAS,GALvB,UAOC,UAAC/G,EAAA,EAAD,CAAMO,cAAc,SAASJ,UAAU,QAAvC,WACC,UAACH,EAAA,EAAD,CAAMK,eAAe,UAAUD,WAAW,SAA1C,WACC,SAAC,EAAD,CAAM2F,YAAY,KAClB,gBAAK5F,UAAU,YAAYmD,QAAS,IAAMoD,IAA1C,UACC,SAACM,EAAA,EAAD,UAGF,gBAAK7G,UAAU,kBAAf,UACC,SAAC,KAAD,CAAY0F,UAAQ,EAApB,UACC,SAAC,EAAD,CAAajF,KAAMwE,EAAAA,MAAmBqB,YAjB3C,E,8tBChBKQ,GAAWzF,IAChB,OAAQA,GACP,IAAK,OAML,QACC,OAAO,SAAC0F,EAAA,EAAD,IALR,IAAK,QACJ,OAAO,SAACC,EAAA,EAAD,IACR,IAAK,QACJ,OAAO,SAACC,GAAA,EAAD,IANT,EAkFD,GA1C+B,KAE9B,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAASC,IAE3BC,GACL,4BACC,iBAAKtH,UAAU,4EAAf,WACC,eAAIA,UAAU,OAAd,2BACA,SAAC,IAAD,CAAQA,UAAU,eAAeS,KAAK,OAAO0C,QAAS,IAAMgE,EAAQ,IAAKI,KAAK,QAA9E,wBAED,gBAAKvH,UAAU,wBAAf,UAtCyBwH,EAuCHN,EAtCjBM,EAAK9E,OAAS,GACrB,SAAC,KAAD,CACC6E,KAAK,QACLE,WAAW,aACXC,WAAYF,EACZG,WAAYC,IACX,SAAC,UAAD,CAAW5H,UAAU,iBAArB,UACC,UAACH,EAAA,EAAD,CAAMI,WAAW,SAAjB,WACA,gBAAKD,UAAU,OAAf,SACE4H,EAAKC,KAAK,SAAC,IAAD,CAAQ3B,IAAG,uBAAkB0B,EAAKC,QAAY,SAAC,IAAD,CAAQ7H,UAAS,qBAAgB4H,EAAKnH,MAAQY,KAAMyF,GAAQc,EAAKvG,WAE3H,iBAAKrB,UAAU,OAAf,WACC,kBAAMA,UAAU,6BAAhB,UAA8C4H,EAAKE,KAAnD,QACA,iBAAM9H,UAAU,kBAAhB,SAAmC4H,EAAKG,WAEzC,kBAAO/H,UAAU,UAAjB,SAA4B4H,EAAKI,eAMpC,iBAAKhI,UAAU,qBAAf,WACC,gBAAKkG,IAAI,sEAAsEC,IAAI,WACnF,cAAGnG,UAAU,OAAb,qDAkBEkH,EAAKxE,OAAS,GACd,gBAAK1C,UAAU,0BAAf,UACC,cAAGA,UAAU,UAAUiI,KAAK,KAA5B,wBAGD,QA/CwBT,MAoD3B,OACC,SAAC,IAAD,CACChB,UAAU,cACVpF,MAAO,KACP8G,QAASZ,EACTa,QAAQ,QACRC,iBAAiB,mBALlB,UAOC,gBAAKpI,UAAU,WAAf,UACC,SAAC,IAAD,CAAOqI,MAAOnB,EAAKxE,OAAnB,UACC,SAAC4F,GAAA,EAAD,CAActI,UAAU,mBAAmBS,KAAK,cAVpD,E,uFC/DD,MAAMoC,GAAY/C,IACjB,eAAGE,UAAU,4BAA4BiI,KAAMnI,EAAMoB,KAArD,WACC,SAACZ,EAAA,EAAD,CAAMN,UAAU,eAAeS,KAAMX,EAAMuB,QAC3C,iBAAMrB,UAAU,0BAAhB,SAA2CF,EAAM4D,WAI7C6E,GAAmBzI,IACxB,kBAAME,UAAU,4BAAhB,WACC,SAACwI,GAAA,EAAD,CAAgBxI,UAAU,kBAC1B,iBAAMA,UAAU,0BAAhB,SAA2CF,EAAM4D,WA+DnD,GA3D0B,KAEzB,MAAMZ,GAAWC,EAAAA,EAAAA,MAQX0F,EAAgB,KACrB3F,GAAS4F,EAAAA,GAAAA,MAAT,EAGKC,GACL,SAAC,IAAD,CACCxF,QAZkB,IAAc,IAAb,IAAElC,GAAU,EACpB,aAARA,GACHwH,GACA,EAUA5D,MACC,CACC,CACC5D,IAAK,eACLyC,OAAO,SAAC,GAAD,CAAUxC,KAAK,IAAIwC,MAAM,eAAerC,KAAMuH,GAAAA,KAEtD,CACC3H,IAAK,kBACLyC,OAAO,SAAC,GAAD,CAAUxC,KAAK,IAAIwC,MAAM,kBAAkBrC,KAAMwH,GAAAA,KAEzD,CACC5H,IAAK,kBACLyC,OAAO,SAAC,GAAD,CAAUxC,KAAK,IAAIwC,MAAM,kBAAkBrC,KAAMyH,GAAAA,KAEzD,CACC7H,IAAK,cACLyC,OAAO,SAAC,GAAD,CAAUxC,KAAK,IAAIwC,MAAM,cAAcrC,KAAM0H,GAAAA,KAErD,CACC9H,IAAK,WACLyC,OAAO,SAAC6E,GAAD,CAAiB7E,MAAM,iBAOnC,OACC,SAAC,KAAD,CAAU8C,UAAU,cAAcwC,QAASL,EAAMR,QAAS,CAAC,SAA3D,UACC,gBAAKnI,UAAU,WAAf,UACC,iBAAKA,UAAU,4BAAf,WACC,SAAC,IAAD,CAAQkG,IAAI,+BACZ,iBAAKlG,UAAU,sCAAf,WACC,gBAAKA,UAAU,kCAAf,6BACA,iBAAMA,UAAU,cAAhB,yCAPL,E,sUC1DD,MAAMiJ,GAAmB,KAExB,MAEMC,EATP,SAA4BC,GAE3B,OADaC,GAAAA,QAAYzG,GAAQA,EAAI0G,SAAWF,IACpC,EACZ,CAMiBG,EAFFtF,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMiF,WAG1C,SAACI,EAAD,KAAWlI,GAAQ6H,EAEzB,OACC,iBAAKlJ,UAAU,4BAAf,WACC,gBAAKwE,MAAO,CAACgF,SAAU,QAAStD,IAAG,qBAAgB7E,EAAhB,QAA4B8E,IAAKoD,KACpE,kBAAMvJ,UAAU,4BAAhB,UAA6CuJ,EAA7C,KAAuD,SAACE,GAAA,EAAD,CAAczJ,UAAU,sBAHjF,EASK6C,GAAY/C,IACjB,MAAMqJ,GAASnF,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMiF,SAE1CrG,GAAWC,EAAAA,EAAAA,MAOjB,OACC,kBAAM/C,UAAU,oDAAoDmD,QAAS,KAAMuG,OANxDL,EAM2EvJ,EAAMuJ,OAL5GvG,GAAS6G,EAAAA,EAAAA,IAAeN,SACxBO,GAAAA,GAAAA,eAAoBP,GAFOA,KAM3B,aACC,4BACC,gBAAK7E,MAAO,CAACgF,SAAU,QAAStD,IAAG,qBAAgBpG,EAAMuB,KAAtB,QAAkC8E,IAAKrG,EAAMyJ,YAChF,iBAAMvJ,UAAU,0BAAhB,SAA2CF,EAAMyJ,cAEjDJ,IAAWrJ,EAAMuJ,QAAS,SAACQ,GAAA,EAAD,CAAe7J,UAAU,iBAAoB,OAN1E,EAWK2I,IACL,SAAC,IAAD,CACC9D,MACC,CACC,CACC5D,IAAK,KACLyC,OAAO,SAAC,GAAD,CAAUrC,KAAK,KAAKkI,SAAS,UAAUF,OAAO,QAEtD,CACCpI,IAAK,KACLyC,OAAO,SAAC,GAAD,CAAUrC,KAAK,KAAKkI,SAAS,UAAUF,OAAO,QAEtD,CACCpI,IAAK,KACLyC,OAAO,SAAC,GAAD,CAAUrC,KAAK,KAAKkI,SAAS,SAASF,OAAO,QAErD,CACCpI,IAAK,KACLyC,OAAO,SAAC,GAAD,CAAUrC,KAAK,KAAKkI,SAAS,YAAYF,OAAO,WA6B5D,GAtB2B,IAAwB,IAAvB,cAAES,GAAoB,EAEjD,OACC,SAAC,KAAD,CAAUtD,UAAU,cAAcwC,QAASL,GAAMR,QAAS,CAAC,SAA3D,SAEE2B,GAEC,cAAG7B,KAAK,KAAKjI,UAAU,YAAYmD,QAAS4G,GAAKA,EAAEC,iBAAnD,UACC,SAACf,GAAD,OAKD,gBAAKjJ,UAAU,WAAf,UACC,SAACiK,GAAA,EAAD,CAAgBjK,UAAU,qBAZ/B,E,gECzED,MAgDA,GAhDoBF,IAEnB,MAAM,YAAEoK,EAAF,MAAeC,EAAM,IAAOrK,GAE3BsK,EAASC,IAAcjD,EAAAA,EAAAA,WAAS,IAChCkD,EAAaC,IAAkBnD,EAAAA,EAAAA,UAAS+C,IACxCK,EAAUC,IAAerD,EAAAA,EAAAA,UAAS+C,IAEzCO,EAAAA,EAAAA,YAAU,KACTD,EAAYN,GACZI,EAAeJ,EAAf,GACE,CAACA,IAEJ,MAAMQ,EAAmB,KACxBN,GAAYD,EAAZ,EAWD,OACC,iBAAKpK,UAAU,eAAf,WACC,gBAAKA,UAAU,wBAAf,UACC,gBAAKA,UAAU,QAAQwE,MAAO,CAACQ,gBAAiBwF,GAAsB,WAAYrH,QAASwH,MAG3FP,IACC,iCACC,gBAAKpK,UAAU,wBAAwBmD,QAASwH,KAChD,SAAC,MAAD,CAAcR,MAAOG,EAAaM,SAjBhBC,IACtB,MAAM,IAACC,GAAOD,EACRE,EAAI,cAAUD,EAAIE,EAAd,aAAoBF,EAAIG,EAAxB,aAA8BH,EAAII,EAAlC,aAAwCJ,EAAIK,EAA5C,KACVV,EAAYM,GACZR,EAAeO,GACfZ,EAAYW,EAAZ,SAGD,E,uCCFD,MAAMO,GAAe,CACpB,UACA,UACA,UACA,UACA,WAGKC,GAAa,QAAC,KAACvD,EAAD,SAAOwD,EAAP,SAAiBC,EAAjB,SAA2BC,GAA5B,SAClB,iBAAKxL,UAAS,eAAUwL,EAAU,GAAK,qDAAvC,WACC,gBAAKxL,UAAS,UAAKuL,EAAW,cAAgB,GAAhC,YAAsCC,EAAU,OAAS,IAAvE,SAA8E1D,KAC9E,yBAAMwD,MAHW,EAmLnB,GA5KiC,KAGhC,MAAMxI,GAAWC,EAAAA,EAAAA,OAEX,QACL+C,EADK,aAEL/B,EAFK,aAGLsB,EAHK,YAILN,EAJK,eAKL0G,EALK,OAMLtC,EANK,aAOLuC,EAPK,UAQLC,IACG3H,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,QAEzB6B,EAAWD,IAAYH,EAAAA,GACvBiG,EAAavG,GAGb,SAAEwG,EAAF,OAAYC,IAAWC,EAAAA,GAAAA,oBA+C7B,OACC,iCACC,iBAAK/L,UAAU,OAAf,WACC,eAAIA,UAAU,wBAAd,wBAEC+F,GACA,SAACsF,GAAD,CACCvD,KAAK,iBACL0D,UAAQ,EACRF,UACC,SAAC,GAAD,CAAanB,MAAOpF,EAAamF,YAhDXW,IAC3B/H,GAASkJ,EAAAA,EAAAA,IAAuB,KAChC,MAAM,IAAElB,GAAQD,EACVE,EAAI,eAAWD,EAAIE,EAAf,aAAqBF,EAAIG,EAAzB,aAA+BH,EAAII,EAAnC,aAAyCJ,EAAIK,EAA7C,KACJc,EAAMhJ,EAAAA,EAAAA,UAAgB8H,GAC5BjI,GAASoJ,EAAAA,EAAAA,IAAoBD,GAA7B,OA+CG,SAACZ,GAAD,CACCvD,KAAK,oBACL0D,UAAQ,EACRF,UACC,SAAC,GAAD,CAAanB,MAAOsB,EAAgBvB,YAhDXW,IAC9B,MAAM,IAAEC,GAAQD,EACVE,EAAI,eAAWD,EAAIE,EAAf,aAAqBF,EAAIG,EAAzB,aAA+BH,EAAII,EAAnC,aAAyCJ,EAAIK,EAA7C,KACJc,EAAMhJ,EAAAA,EAAAA,UAAgB8H,GAC5BjI,GAASkJ,EAAAA,EAAAA,IAAuBC,GAAhC,OAiDE,SAACZ,GAAD,CACCvD,KAAK,mBACLwD,UACC,UAAC,YAAD,CACC/D,KAAK,QACLqD,SAAUb,IAAKoC,OAnDGtB,EAmDYd,EAAEqC,OAAOvB,MAlD5C/H,GAASkJ,EAAAA,EAAAA,IAAuB,KAC7BnB,IAAUlF,EAAAA,MACZuG,EAAAA,EAAAA,IAAoBd,GAAa,KACjCiB,EAAAA,EAAAA,KAAmB,SAEpBvJ,GAASwJ,EAAAA,EAAAA,IAAgBzB,IANFA,KAiDnB,EAGCA,MAAO/E,EAHR,WAKC,SAAC,aAAD,CAAc+E,MAAO5F,EAAAA,GAArB,mBACA,SAAC,aAAD,CAAc4F,MAAOlF,EAAAA,GAArB,uBAIH,SAAC0F,GAAD,CACCvD,KAAK,kBACLwD,UACC,UAAC,YAAD,CACCC,SAAUxF,EACVwB,KAAK,QACLqD,SAAUb,IAAKwC,OAxDS/H,EAwDYuF,EAAEqC,OAAOvB,WAvDlD/H,GAAS0J,EAAAA,EAAAA,IAAiBhI,IADGA,KAqDzB,EAICqG,MAAO9G,EAJR,WAMC,SAAC,aAAD,CAAc8G,MAAOtG,EAAAA,GAArB,oBACA,SAAC,aAAD,CAAcsG,MAAOvF,EAAAA,GAArB,qBAGFiG,SAAUxF,KAEX,SAACsF,GAAD,CACCvD,KAAK,qBACLwD,UACC,SAAC,KAAD,CACCC,SAAUxF,EACV0G,QAASb,EACThB,SAjE0B,KAC/B9H,GAASuJ,EAAAA,EAAAA,KAAoBhH,GAA7B,IAmEGkG,SAAUxF,KAEX,SAACsF,GAAD,CACCvD,KAAK,cACLwD,UACC,SAAC,KAAD,CAAQmB,QAA0B,SAAjBf,EAAyBd,SA9G1B8B,KACpBV,EAAAA,EAAAA,IAAuB,IACvB,MAAMW,EAAeD,EAAY,OAAS,QAC1C5J,GAAS8J,EAAAA,EAAAA,IAAcD,IACvBd,EAAS,CAAE3H,MAAO4H,EAAOa,IAAzB,OA6GE,SAACtB,GAAD,CACCvD,KAAK,aACLwD,UACC,UAAC,YAAD,CACC/D,KAAK,QACLqD,SAAUb,IAAK8C,OA7EUC,EA6EY/C,EAAEqC,OAAOvB,WA5EnD/H,GAASiK,EAAAA,EAAAA,IAAkBD,IADGA,KA2E1B,EAGCjC,MAAOc,EAHR,WAKC,SAAC,aAAD,CAAcd,MAAOmC,EAAAA,GAArB,kBACA,SAAC,aAAD,CAAcnC,MAAOoC,EAAAA,GAArB,0BAKJ,iBAAKjN,UAAU,OAAf,WACC,eAAIA,UAAU,wBAAd,qBACA,SAACqL,GAAD,CACCvD,KAAK,YACLwD,UACC,SAAC,GAAD,CAAaxB,eAAa,UAI7B,0BACC,SAAC,KAAD,CACCoD,MAvGwBC,EAuGC,CAAErH,UAAS/B,eAAcsB,eAAcN,cAAa0G,iBAAgBtC,SAAQuC,eAAcC,aAvG3EyB,KAAKC,UAAUF,EAAa,KAAM,IAwG1EG,OAAQ,IAAMC,GAAAA,GAAAA,QAAgB,oFAF/B,UAIC,SAAC,IAAD,CAAQlM,MAAM,SAACmM,GAAA,EAAD,IAAmBC,OAAK,EAAtC,UACC,oDA3GuBN,KAU5B,ECzED,GA9BwB,IAAoB,IAAnB,UAAExB,GAAgB,EAE1C,MAAOjF,EAAMgH,IAAWtG,EAAAA,EAAAA,WAAS,GAUjC,OACC,iCACC,gBAAKpH,UAAU,WAAWmD,QAVP,KACpBuK,GAAQ,EAAR,EASC,UACC,SAAC7E,GAAA,EAAD,CAAiB7I,UAAU,qBAE5B,SAAC,IAAD,CACCoB,MAAM,eACNoF,UAAWmF,IAAcsB,EAAAA,GAAU,OAAS,QAC5C1H,MAAO,IACPgB,QAbe,KACjBmH,GAAQ,EAAR,EAaEhH,KAAMA,EALP,UAOC,SAAC,GAAD,QAZH,E,gECQD,MAAMiH,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GACvC,IAAM,MAAMvK,KAAWsK,EACQ,IAA3BtK,EAAQ9B,QAAQiB,QAClBoL,EAAWlL,KAAKW,GAEdA,EAAQ9B,QAAQiB,OAAS,GAC3BkL,EAAcrK,EAAQ9B,QAASqM,GAGjC,OAAOA,CACP,CAEkBF,CAAcvJ,GAE3B0J,GAAkBC,IACvB,OAAQA,GACP,IAAK,aACJ,OAAO,SAAC1M,EAAA,EAAD,CAAmBtB,UAAU,iBACrC,IAAK,OACJ,OAAO,SAACiO,GAAA,EAAD,CAAkBjO,UAAU,gBACpC,IAAK,aACJ,OAAO,SAACkO,GAAA,EAAD,CAAmBlO,UAAU,iBACrC,IAAK,QACJ,OAAO,SAAC6B,EAAA,EAAD,CAAkB7B,UAAU,iBACpC,QACC,OAAO,KAVT,EA+ED,GA7CoBF,IACnB,MAAM,OAAEqO,EAAF,MAAUC,EAAV,SAAiBpL,EAAjB,KAA2BsB,GAASxE,GACnC+K,EAAOwD,IAAYjH,EAAAA,EAAAA,UAAS,KAC5BkH,EAASC,IAAcnH,EAAAA,EAAAA,UAAS,IACjCoH,GAAWC,EAAAA,EAAAA,QAAO,MAuBxB,OAJGN,GAHFK,EAASE,QAAQC,SAQjB,SAAC,KAAD,CACCC,IAAKJ,EACLxO,UAAS,2BAAsBgD,EAAU,YAAc,GAA9C,YAA6D,UAATsB,EAAmB,QAAU,IAC1FuK,eAAe,sBACfP,QAASA,EACTQ,SA3Be,KAChBT,EAAS,IACTE,EAAW,IACRH,GACFA,GACA,EAuBAW,SApBeC,IAChBX,EAASW,GACTT,EAAYS,EApCarB,GAAWnK,KAAKoE,IAC1C,MAAMoG,EAAWpG,EAAK3G,IAAIuB,MAAM,KAAK,GACrC,MAAO,CACNqI,MAAOjD,EAAK1G,KACZwC,OACC,SAAC,KAAD,CAAML,GAAIuE,EAAK1G,KAAf,UACC,iBAAKlB,UAAU,mBAAf,WACC,gBAAKA,UAAU,OAAf,SACE+N,GAAgBC,MAElB,4BACC,gBAAKhO,UAAU,uBAAf,UAAsC,SAAC,EAAD,CAAaY,GAAIgH,EAAKxG,WAC5D,iBAAKpB,UAAU,0BAAf,UAA0CgO,EAA1C,eAVL,IAkC0B,GAAzB,EAmBCnD,MAAOA,EACPoE,aAAc,CAACC,EAAYC,KACwC,IAAlEA,EAAOtE,MAAMuE,cAAcC,QAAQH,EAAWE,eAThD,UAYC,SAAC,KAAD,CAAOE,YAAY,YAAaC,QAAQ,SAACC,EAAA,EAAD,CAAgBxP,UAAU,YAbpE,EC7DD,IAAeoF,EAAAA,EAAAA,KALS,IAAgB,IAAf,MAAElB,GAAY,EACrC,MAAM,eAAEuH,GAAoBvH,EAC5B,MAAO,CAAEuH,iBAAT,GAGsC,CAAC,EAAzC,EArB0B3L,IACzB,MAAM,OAAEqO,EAAF,MAAUC,EAAV,eAAiB3C,GAAmB3L,EACpCwE,EAAOrB,EAAAA,EAAAA,iBAAuBwI,GAEpC,OACC,iBAAKzL,UAAS,qBAAgBmO,EAAS,oBAAsB,GAA/C,YAAqD7J,GAAQE,MAAO,CAACQ,gBAAiByG,GAApG,WACC,gBAAKzL,UAAU,kCAAf,UACC,SAAC,GAAD,CAAaoO,MAAOA,EAAOD,OAAQA,OAEpC,gBAAKnO,UAAU,YAAYmD,QAASiL,EAApC,UACC,SAACqB,GAAA,EAAD,QANH,KCGK,OAAEC,IAAWvK,EAAAA,EAkGnB,GAhGyBrF,IAExB,MAAM,SAAEkD,GAAalD,GAEd6P,EAAcC,IAAmBxI,EAAAA,EAAAA,WAAS,GAE3CtE,GAAWC,EAAAA,EAAAA,MAEXsC,GAAerB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMmB,eAChDgB,GAAYrC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMmC,YAC7CP,GAAU9B,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAM4B,UAC3C2F,GAAiBzH,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMuH,iBAClDC,GAAe1H,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMwH,eAChDC,GAAY3H,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,MAAMyH,YAM7CkE,EAAgB,KACrBD,GAAgB,EAAhB,EAWK7J,EAAWD,IAAYH,EAAAA,GAEvBrB,EAAO,IACRmH,EAGGxI,EAAAA,EAAAA,iBAAuBwI,GAFtBxI,EAAAA,EAAAA,iBAAwC,SAAjByI,EAA0B,SAAW,WAK/DoE,EAAUxL,IAmBhB,OANAoG,EAAAA,EAAAA,YAAU,KACL1H,GACH6M,GACA,KAID,SAACH,GAAD,CAAQ1P,UAAS,qBAAgB8P,GAAWtL,MAAO,CAACQ,gBAAiByG,GAArE,UACC,iBAAKzL,UAAS,6BAAwB+F,EAAW,iBAAmB,IAApE,WACC,SAAC,EAAD,CAAMF,SAAUiK,KAChB,iBAAK9P,UAAU,MAAMwE,MAAO,CAACe,MAAM,eAAD,OApBjCQ,GAAY/C,EACP,MAGD,GAAN,OADEqC,EACQW,EAAAA,GAEAR,EAAAA,GAFV,MAgBmC,MAAlC,WACC,iBAAKxF,UAAU,WAAf,WACC,gBAAKA,UAAU,WAAWmD,QA1Cd,KAIfL,EAHGE,GAGMI,EAAAA,EAAAA,KAAmBiD,IAFnBgG,EAAAA,EAAAA,KAAoBhH,GAG7B,EAqCG,UACC,gBAAKrF,UAAU,4BAAf,SACEqF,GAAgBrC,GAAW,SAAC+M,EAAA,EAAD,CAAoB/P,UAAU,cAAgB,SAACgQ,EAAA,EAAD,CAAkBhQ,UAAU,kBAGxG,eAAIA,UAAU,6CAAd,SAEEgD,GACA,eAAIhD,UAAU,yCAAyCmD,QAAS,KAzDtEyM,GAAgB,EAyD6E,EAAvF,UACC,SAACJ,EAAA,EAAD,OAGD,eAAIxP,UAAU,yCAAyCwE,MAAO,CAACyL,OAAQ,QAAvE,UACC,SAAC,GAAD,CAAa3L,KAAMA,EAAMtB,SAAUA,YAKvC,iBAAKhD,UAAU,YAAf,WACC,SAAC,GAAD,KACA,SAAC,GAAD,KACA,SAAC,GAAD,CAAU2L,UAAWA,KACrB,SAAC,GAAD,QAED,SAAC,GAAD,CAAWwC,OAAQwB,EAAcvB,MAAOyB,WA9B5C,E,gBCtED,IAAIK,GAAiB,CACpB,QAAS,SAAC,EAAD,CAAatP,GAAG,UAG1ByD,EAAAA,SAAyB,CAAC1B,EAAKwN,KAC9B,MAAMC,EAAoBC,GAAQH,GAAeG,EAAInP,OAAQ,SAAC,EAAD,CAAaN,GAAIyP,EAAIjP,QAClFgP,EAAiBzN,GACbA,EAAIlB,SACPkB,EAAIlB,QAAQ6O,SAAS3N,IACpByN,EAAiBzN,GACdA,EAAIlB,SACNkB,EAAIlB,QAAQ6O,SAAS3N,IACpByN,EAAiBzN,EAAjB,GAED,GAEF,IAGF,MAAM4N,GAAkBzQ,IACvB,MACM0Q,GADWC,EAAAA,EAAAA,MACaC,SAASlO,MAAM,KAAKmO,QAAOR,GAAKA,IACxDS,EAAkBJ,EAAahN,KAAI,CAACqN,EAAGpO,KAC5C,MAAMqO,EAAG,WAAON,EAAaO,MAAM,EAAGtO,EAAQ,GAAGuO,KAAK,MACtD,OACA,SAAC,UAAD,WACC,SAAC,KAAD,CAAM3N,GAAIyN,EAAV,SAAgBZ,GAAeY,MADVA,EADtB,IAOD,OACC,SAAC,KAAD,UACEF,GAFH,EAOM,MAAMK,WAAsB1Q,EAAAA,UAClCC,SACC,OACC,SAAC+P,GAAD,GAED,EAGF,YClCA,GAd0B,IAAyB,IAAxB,MAAEnP,EAAF,QAAS8P,GAAc,EACjD,OACCA,GACC,iBAAKlR,UAAU,kBAAf,WACC,eAAIA,UAAU,iCAAd,UACC,SAAC,EAAD,CAAaY,GAAIQ,GAAe,YAEjC,SAAC,GAAD,OAGA,IATH,ECFc,SAAS+P,KACvB,OACC,oBAAQnR,UAAU,SAAlB,WACC,kBAAMwE,MAAO,CAAC4M,WAAW,OAAzB,yCAAwD,IAAIC,MAAOC,eAAnE,KAAoF,iBAAMtR,UAAU,uBAAuBwE,MAAO,CAAC2F,MAAM,QAArD,mBAAkE/D,EAAAA,MAAtJ,4BACA,4BACC,cAAGpG,UAAU,YAAYiI,KAAK,KAAK9E,QAAS4G,GAAKA,EAAEC,iBAAnD,gCACA,iBAAMhK,UAAU,kBAAhB,kBACA,cAAGA,UAAU,YAAYiI,KAAK,KAAK9E,QAAS4G,GAAKA,EAAEC,iBAAnD,mCAIH,CCUD,MAAM,QAAEuH,IAAYpM,EAAAA,GACZrD,cAAF,IAAoBC,EAAAA,GAEbyP,GAAY,IAAqD,IAApD,aAAEnM,EAAF,QAAgBS,EAAhB,UAAyB6F,EAAzB,SAAoC5L,GAAe,EAEzE,MAAM0R,GAAWhB,EAAAA,EAAAA,MAEXiB,EAAmBzO,EAAAA,EAAAA,aAAmBoB,EAAkBoN,EAASf,UACjEiB,EAAU1O,EAAAA,EAAAA,cAAoBnB,MAC9BkB,EAA8B,IAAnB2O,EAAQjP,SAAwBiP,EAAQzO,SAAS,MAC5D0O,EAAY9L,IAAYb,EAAAA,GACxBc,EAAWD,IAAYH,EAAAA,GACvBkM,EAAkB,IACjB9L,GAAY/C,EACJ,EAEJqC,EAAeW,EAAAA,GAA2BR,EAAAA,IAG/C,OAAEsM,IAAW/F,EAAAA,GAAAA,oBAEnB,GAAe,YAAX+F,EACA,OAAO,SAACC,EAAA,EAAD,CAASC,MAAM,SAa1B,OACI,UAAC,IAAD,YACI,SAAC,GAAD,CAAWhP,SAAUA,IACnB+C,IAAa/C,GAAY,SAAC,EAAD,CAAQa,UAAW6N,IAAsB,MACpE,UAAC,IAAD,CAAQ1R,UAAU,gBAAlB,UACM4R,IAAc5O,GAAY,SAAC,EAAD,CAASa,UAAW6N,IAAsB,MACtE,UAAC,IAAD,CAAQ1R,UAAU,aAAawE,MAfpCmH,IAAcqB,EAAAA,GACN,CAACiF,YAAaJ,KAEtBlG,IAAcsB,EAAAA,GACN,CAACiF,aAAcL,KAEnB,CAACI,YAAaJ,KASb,WACI,iBAAK7R,UAAS,sBAAiB+F,EAAW,iBAAmB,IAA7D,WACI,SAAC,GAAD,CAAYmL,QAAO,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAkBnQ,WAAYH,MAAK,OAAEsQ,QAAF,IAAEA,OAAF,EAAEA,EAAkBtQ,SAC5E,SAACmQ,GAAD,WACI,SAAC,EAAAY,SAAD,CAAUtR,UAAU,SAACkR,EAAA,EAAD,CAASC,MAAM,YAAnC,SACKjS,UAIb,SAACoR,GAAD,UAGPnO,IAAY,SAAC,EAAD,MAlBrB,EA4BJ,IAAeoC,EAAAA,EAAAA,KALS,IAAgB,IAAf,MAAElB,GAAY,EACnC,MAAM,aAAEmB,EAAF,QAAgBS,EAAhB,OAAyBqD,GAAYjF,EAC3C,MAAO,CAAEmB,eAAcS,UAASqD,SAAhC,GAGJ,CAAwCxI,EAAAA,KAAW6Q,I,kCCgInD,QAvNA,MAOsB,sBAAC1J,GACrB,IAAIsK,EAAWtK,EAAKuK,MAAM,UAAY,GACtC,QAASD,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKnD,aAC3D,CAQkB,oBAACoD,EAAStR,GAC5B,GAAIsR,EAAQtR,OAASA,EAClB,OAAOsR,EAEV,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACb,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAC/CD,EAAQ/R,KAAKkS,aAAaJ,EAAQE,GAAIxR,GACnCuR,GACF,OAAOA,EAIV,OAAOA,CACP,CAOsB,wBAACxG,GACvB,IAAIA,EACH,MAAO,OAER,MACM4G,EAGqBC,SAAUC,EAHjB9G,GAG4B+G,UAAU,EAAE,GAAG,IAF/D,MAAMC,EAGN,SAAgBC,GAAI,OAAOJ,SAAUC,EAAOG,GAAIF,UAAU,EAAE,GAAG,GAAI,CAHpDG,CAAOlH,GAChBmH,EAGN,SAAgBF,GAAI,OAAOJ,SAAUC,EAAOG,GAAIF,UAAU,EAAE,GAAG,GAAI,CAHrDK,CAAOpH,GAIrB,SAAS8G,EAAOG,GAAI,MAAwB,MAAhBA,EAAEI,OAAO,GAAcJ,EAAEF,UAAU,EAAE,GAAGE,CAAE,CAEtE,OAD6B,IAAPL,EAAwB,IAATI,EAAyB,IAARG,GAAgB,IARpD,IAUV,OAEA,OAER,CAQgB,kBAACjJ,EAAOoJ,GACxB,IAAIC,EAAIV,SAAS3I,EAAM6I,UAAU,EAAE,GAAG,IAClCS,EAAIX,SAAS3I,EAAM6I,UAAU,EAAE,GAAG,IAClCU,EAAIZ,SAAS3I,EAAM6I,UAAU,EAAE,GAAG,IACtCQ,EAAIV,SAASU,GAAK,IAAMD,GAAW,KACnCE,EAAIX,SAASW,GAAK,IAAMF,GAAW,KACnCG,EAAIZ,SAASY,GAAK,IAAMH,GAAW,KACnCC,EAAKA,EAAE,IAAKA,EAAE,IACdC,EAAKA,EAAE,IAAKA,EAAE,IACdC,EAAKA,EAAE,IAAKA,EAAE,IACd,MAAMC,EAAiC,IAA1BH,EAAErR,SAAS,IAAIO,OAAhB,WAAoC8Q,EAAErR,SAAS,KAAQqR,EAAErR,SAAS,IACxEyR,EAAiC,IAA1BH,EAAEtR,SAAS,IAAIO,OAAhB,WAAoC+Q,EAAEtR,SAAS,KAAQsR,EAAEtR,SAAS,IACxE0R,EAAiC,IAA1BH,EAAEvR,SAAS,IAAIO,OAAhB,WAAoCgR,EAAEvR,SAAS,KAAQuR,EAAEvR,SAAS,IAC9E,MAAM,IAAN,OAAWwR,GAAX,OAAgBC,GAAhB,OAAqBC,EACrB,CAOe,iBAAC9I,GAChB,MAAM+I,EAAOC,GAAQA,EAAIC,QAAQ,cAAc,IACzCC,EAAUlJ,EAAKiI,UAAUjI,EAAKsE,QAAQ,MAAM7M,MAAM,KACvDwI,EAAI8H,SAASgB,EAAKG,EAAQ,GAAGjB,UAAU,IAAK,IAC5C/H,EAAI6H,SAASgB,EAAKG,EAAQ,IAAK,IAC/B/I,EAAI4H,SAASgB,EAAKG,EAAQ,IAAK,IAC/B9I,EAAI+I,WAAWJ,EAAKG,EAAQ,GAAGjB,UAAU,EAAGiB,EAAQ,GAAGvR,OAAS,KAAKyR,QAAQ,GACvEC,EAAW,CACjBpJ,EAAE7I,SAAS,IACX8I,EAAE9I,SAAS,IACX+I,EAAE/I,SAAS,IACXkS,KAAKC,MAAU,IAAJnJ,GAAShJ,SAAS,IAAI6Q,UAAU,EAAG,IAQ/C,OALAoB,EAAS9D,SAAQ,SAAUiE,EAAMpE,GACZ,IAAhBoE,EAAK7R,SACR0R,EAASjE,GAAK,IAAMoE,EAErB,IACK,IAAN,OAAYH,EAASpD,KAAK,IAC1B,CASgB,kBAACwD,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,IACP,CASqB,uBAACvJ,EAAGD,EAAGjK,GAC5B,MAAqB,kBAAXkK,EAAElK,IAAuC,kBAAXiK,EAAEjK,GAClCkK,EAAElK,GAAOiK,EAAEjK,GAGE,kBAAXkK,EAAElK,IAAuC,kBAAXiK,EAAEjK,IACzCkK,EAAIA,EAAElK,GAAK0T,gBACXzJ,EAAIA,EAAEjK,GAAK0T,gBACK,EAAIzJ,EAAIC,EAAI,EAAI,OAHjC,CAMA,CASiB,mBAAC3D,EAAMvG,EAAK4J,GAC7B,IAAI3D,EAAOM,EAIX,OAHGA,IACFN,EAAOM,EAAKmJ,QAAO/I,GAAQA,EAAK3G,KAAS4J,KAEnC3D,CACP,CASoB,sBAACM,EAAMvG,EAAK4J,GAChC,IAAI3D,EAAOM,EAIX,OAHGA,IACFN,EAAOM,EAAKmJ,QAAO/I,GAAQA,EAAK3G,KAAS4J,KAEnC3D,CACP,CAQoB,sBAACM,EAAMoN,GAY3B,OADApN,EAAOA,EAAKmJ,QAAO9F,GAVCjD,KACnB,IAAK,IAAI3G,KAAO2G,EACf,GAAiB,MAAbA,EAAK3G,KAG2E,IAAhF2G,EAAK3G,GAAKkB,WAAWiN,cAAcC,QAAQuF,EAAMzS,WAAWiN,eAC/D,OAAO,CAER,EAE0BJ,CAAWnE,IAEvC,CAOmB,qBAAC8G,GACpB,IAAIkD,EAAc,GAClB,IAAK,MAAM5T,KAAO0Q,EACjB,GAAIA,EAAQgB,eAAe1R,GAAM,CAChB0Q,EAAQ1Q,IAEvB4T,EAAYjS,KAAK3B,EAElB,CAEF,OAAO4T,CACP,E","sources":["components/shared-components/Flex/index.js","components/util-components/Icon/index.js","components/util-components/IntlMessage/index.js","configs/NavigationConfig.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavNotification.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/shared-components/ColorPicker/index.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js","utils/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import { DashboardOutlined,PlusCircleOutlined, FileTextOutlined,ShoppingCartOutlined, MessageOutlined} from '@ant-design/icons';\r\n// import { BsPersonFillAdd } from \"react-icons/bs\";\r\n// import { BsPersonPlus } from \"react-icons/bs\";\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: '',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  \r\n  submenu: [\r\n    {\r\n      key: 'dashboards-default',\r\n      path: `${APP_PREFIX_PATH}/dashboards/default`,\r\n      title: 'sidenav.dashboard.default',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    // {\r\n    //   key: 'dashboard.userlisting',\r\n    //   path: `${APP_PREFIX_PATH}/dashboards/userlisting`,\r\n    //   title: 'sidenav.dashboard.userlisting',\r\n    //   icon:BsPersonFillAdd,\r\n    //   breadcrumb: false,\r\n    //   submenu: []\r\n    // },\r\n    // {\r\n    //   key: 'dashboard.serviceproviderlisting',\r\n    //   path: `${APP_PREFIX_PATH}/dashboards/serviceproviderlisting`,\r\n    //   title: 'sidenav.dashboard.serviceproviderlisting',\r\n    //   icon:BsPersonPlus,\r\n    //   breadcrumb: false,\r\n    //   submenu: []\r\n    // },\r\n\r\n    // e-commerce \r\n\r\n    {\r\n      key: 'apps-ecommerce',\r\n      path: `${APP_PREFIX_PATH}/apps/ecommerce`,\r\n      title: 'sidenav.apps.ecommerce',\r\n      icon: ShoppingCartOutlined,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: 'apps-ecommerce-productList',\r\n          path: `${APP_PREFIX_PATH}/apps/ecommerce/product-list`,\r\n          title: 'sidenav.apps.ecommerce.productList',\r\n          icon: '',\r\n          breadcrumb: true,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'apps-ecommerce-addProduct',\r\n          path: `${APP_PREFIX_PATH}/apps/ecommerce/add-product`,\r\n          title: 'sidenav.apps.ecommerce.addProduct',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'apps-ecommerce-editProduct',\r\n          path: `${APP_PREFIX_PATH}/apps/ecommerce/edit-product/12`,\r\n          title: 'sidenav.apps.ecommerce.editProduct',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'apps-ecommerce-orders',\r\n          path: `${APP_PREFIX_PATH}/apps/ecommerce/orders`,\r\n          title: 'sidenav.apps.ecommerce.orders',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n\r\n        {\r\n          key: 'chat',\r\n          path: `${APP_PREFIX_PATH}/chat`,\r\n          title: 'sidenav.apps.chat',\r\n          icon: MessageOutlined,\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n      ]\r\n    },\r\n    \r\n\r\n  \r\n\r\n    {\r\n      key: 'extra',\r\n      path: `${APP_PREFIX_PATH}/pages`,\r\n      title: 'sidenav.pages',\r\n      icon: PlusCircleOutlined,\r\n      breadcrumb: true,\r\n      isGroupTitle: true,\r\n      submenu: [\r\n        {\r\n          key: 'extra-pages',\r\n          path: `${APP_PREFIX_PATH}/pages`,\r\n          title: 'sidenav.pages',\r\n          icon: FileTextOutlined,\r\n          breadcrumb: true,\r\n          submenu: [\r\n            {\r\n              key: 'extra-pages-profile',\r\n              path: `${APP_PREFIX_PATH}/pages/profile`,\r\n              title: 'sidenav.pages.profile',\r\n              icon: '',\r\n              breadcrumb: false,\r\n              submenu: []\r\n            },\r\n            {\r\n              key: 'extra-pages-list',\r\n              path: `${APP_PREFIX_PATH}/pages/user-list`,\r\n              title: 'sidenav.pages.userlist',\r\n              icon: '',\r\n              breadcrumb: true,\r\n              submenu: []\r\n            },\r\n            {\r\n              key: 'extra-pages-invoice',\r\n              path: `${APP_PREFIX_PATH}/pages/invoice`,\r\n              title: 'sidenav.pages.invoice',\r\n              icon: '',\r\n              breadcrumb: true,\r\n              submenu: []\r\n            },\r\n            {\r\n              key: 'extra-pages-pricing',\r\n              path: `${APP_PREFIX_PATH}/pages/pricing`,\r\n              title: 'sidenav.pages.pricing',\r\n              icon: '',\r\n              breadcrumb: true,\r\n              submenu: []\r\n            },\r\n            {\r\n              key: 'extra-pages-faq',\r\n              path: `${APP_PREFIX_PATH}/pages/faq`,\r\n              title: 'sidenav.pages.faq',\r\n              icon: '',\r\n              breadcrumb: false,\r\n              submenu: []\r\n            },\r\n            {\r\n              key: 'extra-pages-setting',\r\n              path: `${APP_PREFIX_PATH}/pages/setting`,\r\n              title: 'sidenav.pages.setting',\r\n              icon: '',\r\n              breadcrumb: true,\r\n              submenu: []\r\n            }\r\n          ]\r\n        },\r\n      \r\n       \r\n      ]\r\n    }\r\n\r\n\r\n    \r\n  ]\r\n}]\r\n\r\n\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n\tlet keyList = [];\r\n\tlet keyString = \"\";\r\n\tif (key) {\r\n\t\tconst arr = key.split(\"-\");\r\n\t\tfor (let index = 0; index < arr.length; index++) {\r\n\t\t\tconst elm = arr[index];\r\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n\t\t\tkeyList.push(keyString);\r\n\t\t}\r\n\t}\r\n\treturn keyList;\r\n};\r\n\r\nconst MenuItem = ({title, icon, path}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tdispatch(onMobileNavToggle(false))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{icon && <Icon type={icon} /> }\r\n\t\t\t<span>{setLocale(title)}</span>\r\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst getSideNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\r\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\r\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst getTopNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\r\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst SideNavContent = (props) => {\r\n\r\n\tconst { routeInfo, hideGroupTitle } = props;\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\r\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig), []);\r\n\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tmode=\"inline\"\r\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n\t\t\tstyle={{ height: \"100%\", borderRight: 0 }}\r\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\r\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst TopNavContent = () => {\r\n\r\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), [])\r\n\r\n\treturn (\r\n\t\t<Menu \r\n\t\t\tmode=\"horizontal\" \r\n\t\t\tstyle={{ backgroundColor: topNavColor }}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n\treturn props.type === NAV_TYPE_SIDE ? (\r\n\t\t<SideNavContent {...props} />\r\n\t) : (\r\n\t\t<TopNavContent {...props} />\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor,}) => {\r\n\tconst props = { topNavColor }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n\tconst navType = useSelector(state => state.theme.navType);\r\n\r\n\tconst getLogoWidthGutter = () => {\r\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif(isNavTop) {\r\n\t\t\treturn 'auto'\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst getLogo = () => {\r\n\t\t\r\n\t\tif(logoType === 'light') {\r\n\t\t\tif(navCollapsed) {\r\n\t\t\treturn '/img/logo-white.png'\r\n\t\t\t}\r\n\t\t\treturn '/img/logo-white.png'\r\n\t\t}\r\n\t\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn '/img/logo-sm.png'\r\n\t\t}\r\n\t\treturn '/img/logo.png'\r\n\t}\r\n\t\r\n\tconst getLogoDisplay = () => {\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 'd-none'\r\n\t\t} else {\r\n\t\t\treturn 'logo'\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={getLogoDisplay()} \r\n\t\t\tstyle={{width: `${getLogoWidthGutter()}`}}>\r\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`} style={{width:'80px'}}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { sideNavTheme, routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"between\" alignItems=\"center\">\r\n\t\t\t\t\t<Logo mobileLogo={true} />\r\n\t\t\t\t\t<div className=\"nav-close\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"mobile-nav-menu\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import React, { useState } from 'react';\r\nimport { Badge, Avatar, List, Button, Popover } from 'antd';\r\nimport { \r\n\tMailOutlined, \r\n\tBellOutlined, \r\n\tWarningOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport notificationData from \"assets/data/notification.data.json\";\r\nimport Flex from 'components/shared-components/Flex'\r\n\r\nconst getIcon =  icon => {\r\n\tswitch (icon) {\r\n\t\tcase 'mail':\r\n\t\t\treturn <MailOutlined />;\r\n\t\tcase 'alert':\r\n\t\t\treturn <WarningOutlined />;\r\n\t\tcase 'check':\r\n\t\t\treturn <CheckCircleOutlined />\r\n\t\tdefault:\r\n\t\t\treturn <MailOutlined />;\r\n\t}\r\n}\r\n\r\nconst getNotificationBody = list => {\r\n\treturn list.length > 0 ?\r\n\t<List\r\n\t\tsize=\"small\"\r\n\t\titemLayout=\"horizontal\"\r\n\t\tdataSource={list}\r\n\t\trenderItem={item => (\r\n\t\t\t<List.Item className=\"list-clickable\">\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t<div className=\"pr-3\">\r\n\t\t\t\t\t{item.img? <Avatar src={`/img/avatars/${item.img}`} /> : <Avatar className={`ant-avatar-${item.type}`} icon={getIcon(item.icon)} />}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mr-3\">\r\n\t\t\t\t\t<span className=\"font-weight-bold text-dark\">{item.name} </span>\r\n\t\t\t\t\t<span className=\"text-gray-light\">{item.desc}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<small className=\"ml-auto\">{item.time}</small>\r\n\t\t\t\t</Flex>\r\n\t\t\t</List.Item>\r\n\t\t)}\r\n\t/>\r\n\t:\r\n\t<div className=\"empty-notification\">\r\n\t\t<img src=\"https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg\" alt=\"empty\" />\r\n\t\t<p className=\"mt-3\">You have viewed all notifications</p>\r\n\t</div>;\r\n}\r\n\r\nexport const NavNotification = () => {\r\n\r\n\tconst [data, setData] = useState(notificationData)\r\n\r\n\tconst notificationList = (\r\n\t\t<div>\r\n\t\t\t<div className=\"nav-notification-header d-flex justify-content-between align-items-center\">\r\n\t\t\t\t<h4 className=\"mb-0\">Notification</h4>\r\n\t\t\t\t<Button className=\"text-primary\" type=\"text\" onClick={() => setData([])} size=\"small\">Clear </Button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-notification-body\">\r\n\t\t\t\t{getNotificationBody(data)}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tdata.length > 0 ? \r\n\t\t\t\t<div className=\"nav-notification-footer\">\r\n\t\t\t\t\t<a className=\"d-block\" href=\"#/\">View all</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\tnull\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Popover \r\n\t\t\tplacement=\"bottomRight\" \r\n\t\t\ttitle={null} \r\n\t\t\tcontent={notificationList} \r\n\t\t\ttrigger=\"click\"\r\n\t\t\toverlayClassName=\"nav-notification\"\r\n\t\t>\r\n\t\t\t<div className=\"nav-item\">\r\n\t\t\t\t<Badge count={data.length}>\r\n\t\t\t\t\t<BellOutlined className=\"nav-icon mx-auto\" type=\"bell\" />\r\n\t\t\t\t</Badge>\r\n\t\t\t</div>\r\n\t\t</Popover>\r\n\t)\r\n}\r\n\r\n\r\nexport default NavNotification;\r\n","import React from 'react';\r\nimport { Menu, Dropdown, Avatar } from 'antd';\r\nimport { useDispatch } from 'react-redux'\r\nimport { \r\n\tEditOutlined, \r\n\tSettingOutlined, \r\n\tShopOutlined, \r\n\tQuestionCircleOutlined, \r\n\tLogoutOutlined \r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport { signOut } from 'store/slices/authSlice';\r\n\r\nconst MenuItem = (props) => (\r\n\t<a className=\"d-flex align-items-center\" href={props.path}>\r\n\t\t<Icon className=\"font-size-md\" type={props.icon} />\r\n\t\t<span className=\"font-weight-normal mx-2\">{props.label}</span>\r\n\t</a>\r\n)\r\n\r\nconst MenuItemSignOut = (props) => (\r\n\t<span className=\"d-flex align-items-center\">\r\n\t\t<LogoutOutlined className=\"font-size-md\" />\r\n\t\t<span className=\"font-weight-normal mx-2\">{props.label}</span>\r\n\t</span>\r\n)\r\n\r\nexport const NavProfile = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleClick = ({ key }) => {\r\n\t\tif (key === 'Sign Out') {\r\n\t\t\thandleSignOut()\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tdispatch(signOut())\r\n\t}\r\n\r\n\tconst menu = (\r\n\t\t<Menu\r\n\t\t\tonClick={handleClick}\r\n\t\t\titems={\r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Edit Profile',\r\n\t\t\t\t\t\tlabel: <MenuItem path=\"/\" label=\"Edit Profile\" icon={EditOutlined} />,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Account Setting',\r\n\t\t\t\t\t\tlabel: <MenuItem path=\"/\" label=\"Account Setting\" icon={SettingOutlined} />,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Account Billing',\r\n\t\t\t\t\t\tlabel: <MenuItem path=\"/\" label=\"Account Billing\" icon={ShopOutlined} />,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Help Center',\r\n\t\t\t\t\t\tlabel: <MenuItem path=\"/\" label=\"Help Center\" icon={QuestionCircleOutlined} />,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Sign Out',\r\n\t\t\t\t\t\tlabel: <MenuItemSignOut label=\"Sign Out\" />,\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t/>\r\n\t) \r\n\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={menu} trigger={[\"click\"]}>\r\n\t\t\t<div className=\"nav-item\">\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<Avatar src=\"/img/avatars/thumb-13.jpg\" />\r\n\t\t\t\t\t<div className=\"pl-2 d-none d-sm-block profile-text\">\r\n\t\t\t\t\t\t<div className=\"font-size-base font-weight-bold\">Amarjeet Kumar</div>\r\n\t\t\t\t\t\t<span className=\"opacity-0-8\">Software Developer</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t);\r\n}\r\n\r\nexport default NavProfile\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from 'assets/data/language.data.json';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { onLocaleChange } from 'store/slices/themeSlice';\r\nimport i18n from 'i18next'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = () => {\r\n\r\n\tconst locale = useSelector(state => state.theme.locale)\r\n\r\n\tconst language = getLanguageDetail(locale);\r\n\tconst {langName, icon} = language;\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nconst MenuItem = (props) => {\r\n\tconst locale = useSelector(state => state.theme.locale);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLocaleChange = (langId) => {\r\n\t\tdispatch(onLocaleChange(langId))\r\n\t\ti18n.changeLanguage(langId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<span className=\"d-flex justify-content-between align-items-center\" onClick={() => handleLocaleChange(props.langId)}>\r\n\t\t\t<div>\r\n\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${props.icon}.png`} alt={props.langName}/>\r\n\t\t\t\t<span className=\"font-weight-normal ml-2\">{props.langName}</span>\r\n\t\t\t</div>\r\n\t\t\t{locale === props.langId ? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t</span>\r\n\t)\r\n}\r\n\r\nconst menu = (\r\n\t<Menu \r\n\t\titems={\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'En',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"us\" langName=\"English\" langId=\"en\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Ch',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"cn\" langName=\"Chinese\" langId=\"zh\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Fr',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"fr\" langName=\"French\" langId=\"fr\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Jp',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"jp\" langName=\"Janpanese\" langId=\"ja\" />\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t/>\r\n)\r\n\r\nexport const NavLanguage = ({ configDisplay }) => {\r\n\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={menu} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"nav-item\">\r\n\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nexport default NavLanguage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'store/slices/themeSlice';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = () => {\r\n\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { \r\n\t\tnavType, \r\n\t\tsideNavTheme, \r\n\t\tnavCollapsed, \r\n\t\ttopNavColor, \r\n\t\theaderNavColor, \r\n\t\tlocale, \r\n\t\tcurrentTheme, \r\n\t\tdirection \r\n\t} = useSelector(state => state.theme)\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP\r\n\tconst isCollapse = navCollapsed \r\n\r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tdispatch(onSwitchTheme(changedTheme))\r\n\t\tswitcher({ theme: themes[changedTheme] });\r\n\t};\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tdispatch(onHeaderNavColorChange(''))\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tdispatch(onTopNavColorChange(hex))\r\n\t}\r\n\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tdispatch(onHeaderNavColorChange(hex))\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tdispatch(onHeaderNavColorChange(''))\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tdispatch(onNavTypeChange(value))\r\n\t}\r\n\r\n\tconst haddleNavStyleChange = (style) => {\r\n\t\tdispatch(onNavStyleChange(style))\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\tconst handleToggleCollapseNav = () => {\r\n\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t}\r\n\r\n\tconst handleDirectionChange = (dir) => {\r\n\t\tdispatch(onDirectionChange(dir))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => haddleNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={handleToggleCollapseNav} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direction:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => handleDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ThemeConfigurator\r\n","import React, { useState } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport const NavPanel = ({ direction }) => {\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n  \tconst showDrawer = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n  \tconst onClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"nav-item\" onClick={showDrawer}>\r\n\t\t\t\t<SettingOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t</div>\r\n\t\t\t<Drawer\r\n\t\t\t\ttitle=\"Theme Config\"\r\n\t\t\t\tplacement={direction === DIR_RTL ? 'left' : 'right'} \r\n\t\t\t\twidth={350}\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\topen={open}\r\n\t\t\t>\r\n\t\t\t\t<ThemeConfigurator/>\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavPanel;","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tpopupClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\nimport NavLanguage from './NavLanguage';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n\r\n\tconst { isMobile } = props;\r\n\r\n\tconst [searchActive, setSearchActive] = useState(false);\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed)\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav)\r\n\tconst navType = useSelector(state => state.theme.navType)\r\n\tconst headerNavColor = useSelector(state => state.theme.headerNavColor)\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\tconst direction = useSelector(state => state.theme.direction)\r\n\r\n\tconst onSearchActive = () => {\r\n\t\tsetSearchActive(true)\r\n\t}\r\n\r\n\tconst onSearchClose = () => {\r\n\t\tsetSearchActive(false)\r\n\t}\r\n\r\n\tconst onToggle = () => {\r\n\t\tif(!isMobile) {\r\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t\t} else {\r\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\r\n\t\t}\r\n\t}\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\r\n\tconst mode = ()=> {\r\n\t\tif(!headerNavColor) {\r\n\t\t\treturn utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n\t\t}\r\n\t\treturn utils.getColorContrast(headerNavColor);\r\n\t}\r\n\r\n\tconst navMode = mode();\r\n\r\n\tconst getNavWidth = () => {\r\n\t\tif(isNavTop || isMobile) {\r\n\t\t\treturn '0px';\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`;\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!isMobile) {\r\n\t\t\tonSearchClose();\r\n\t\t}\r\n\t})\r\n\t\r\n\treturn (\r\n\t\t<Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n\t\t\t\t<Logo logoType={navMode}/>\r\n\t\t\t\t<div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n\t\t\t\t\t<div className=\"nav-left\">\r\n\t\t\t\t\t\t<div className=\"nav-item\" onClick={onToggle}>\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tisMobile ?\r\n\t\t\t\t\t\t\t\t<li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onSearchActive()}}>\r\n\t\t\t\t\t\t\t\t\t<SearchOutlined />\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<li className=\"ant-menu-item ant-menu-item-only-child\" style={{cursor: 'auto'}}>\r\n\t\t\t\t\t\t\t\t\t<SearchInput mode={mode} isMobile={isMobile} />\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"nav-right\">\r\n\t\t\t\t\t\t<NavNotification />\r\n\t\t\t\t\t\t<NavLanguage />\r\n\t\t\t\t\t\t<NavPanel direction={direction} />\r\n\t\t\t\t\t\t<NavProfile />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<NavSearch active={searchActive} close={onSearchClose}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default HeaderNav;","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn (\r\n\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t<Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t</Breadcrumb.Item>\r\n\t\t);\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span style={{marginLeft:'40%'}}>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\" style={{color:'blue'}}>{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { \r\n    SIDE_NAV_WIDTH, \r\n    SIDE_NAV_COLLAPSED_WIDTH,\r\n    NAV_TYPE_SIDE,\r\n    NAV_TYPE_TOP,\r\n    DIR_RTL,\r\n    DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === NAV_TYPE_SIDE\r\n    const isNavTop = navType === NAV_TYPE_TOP\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const { status } = useThemeSwitcher();\r\n\r\n    if (status === 'loading') {\r\n        return <Loading cover=\"page\" />;\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === DIR_LTR) {\r\n            return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === DIR_RTL) {\r\n            return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n            <Layout className=\"app-container\">\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n                <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n                    <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content>\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </div>\r\n                    <Footer />\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","Icon","Component","render","type","this","React","id","fallback","t","useTranslation","translate","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","isGroupTitle","submenu","ShoppingCartOutlined","MessageOutlined","PlusCircleOutlined","FileTextOutlined","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","MenuItem","dispatch","useDispatch","isMobile","utils","includes","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","map","nav","label","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","useSelector","state","theme","menuItems","useMemo","navigationConfig","mode","SIDE_NAV_LIGHT","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","autoHide","NAV_TYPE_TOP","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","padding","ArrowLeftOutlined","getIcon","MailOutlined","WarningOutlined","CheckCircleOutlined","data","setData","useState","notificationData","notificationList","size","list","itemLayout","dataSource","renderItem","item","img","name","desc","time","href","content","trigger","overlayClassName","count","BellOutlined","MenuItemSignOut","LogoutOutlined","handleSignOut","signOut","menu","EditOutlined","SettingOutlined","ShopOutlined","QuestionCircleOutlined","overlay","SelectedLanguage","language","locale","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","handleLocaleChange","onLocaleChange","i18n","CheckOutlined","configDisplay","e","preventDefault","GlobalOutlined","colorChange","color","visible","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","value","rgb","rgba","r","g","b","a","colorOptions","ListOption","selector","disabled","vertical","headerNavColor","currentTheme","direction","isCollapse","switcher","themes","useThemeSwitcher","onHeaderNavColorChange","hex","onTopNavColorChange","onNavTypeClick","target","toggleCollapsedNav","onNavTypeChange","haddleNavStyleChange","onNavStyleChange","checked","isChecked","changedTheme","onSwitchTheme","handleDirectionChange","dir","onDirectionChange","DIR_LTR","DIR_RTL","text","configState","JSON","stringify","onCopy","message","CopyOutlined","block","setOpen","optionList","getOptionList","navigationTree","optionTree","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","popupClassName","onSelect","onSearch","searchText","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","cursor","breadcrumbData","i","assignBreadcrumb","obj","forEach","BreadcrumbRoute","pathSnippets","useLocation","pathname","filter","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","display","Footer","marginLeft","Date","getFullYear","Content","AppLayout","location","currentRouteInfo","screens","isNavSide","getLayoutGutter","status","Loading","cover","paddingLeft","paddingRight","Suspense","initials","match","shift","pop","navTree","route","p","hasOwnProperty","getRouteInfo","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","input","breakpoints"],"sourceRoot":""}