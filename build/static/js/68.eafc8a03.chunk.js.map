{"version":3,"file":"static/js/68.eafc8a03.chunk.js","mappings":"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","sources":["views/auth-views/components/RegisterForm.js","views/auth-views/authentication/register/index.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Alert } from \"antd\";\r\nimport { signUp, showAuthMessage, showLoading, hideAuthMessage } from 'store/slices/authSlice';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst rules = {\r\n\temail: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your email address'\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttype: 'email',\r\n\t\t\tmessage: 'Please enter a validate email!'\r\n\t\t}\r\n\t],\r\n\tpassword: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your password'\r\n\t\t}\r\n\t],\r\n\tconfirm: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please confirm your password!'\r\n\t\t},\r\n\t\t({ getFieldValue }) => ({\r\n\t\t\tvalidator(_, value) {\r\n\t\t\t\tif (!value || getFieldValue('password') === value) {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise.reject('Passwords do not match!');\r\n\t\t\t},\r\n\t\t})\r\n\t]\r\n}\r\n\r\nexport const RegisterForm = (props) => {\r\n\r\n\tconst { signUp, showLoading, token, loading, redirect, message, showMessage, hideAuthMessage, allowRedirect = true } = props\r\n\tconst [form] = Form.useForm();\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst onSignUp = () => {\r\n    \tform.validateFields().then(values => {\r\n\t\t\tshowLoading()\r\n\t\t\tsignUp(values)\r\n\t\t}).catch(info => {\r\n\t\t\tconsole.log('Validate Failed:', info);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (token !== null && allowRedirect) {\r\n\t\t\tnavigate(redirect)\r\n\t\t}\r\n\t\tif (showMessage) {\r\n\t\t\tconst timer = setTimeout(() => hideAuthMessage(), 3000)\r\n\t\t\treturn () => {\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div \r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \r\n\t\t\t\tanimate={{ \r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0 \r\n\t\t\t\t}}> \r\n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form form={form} layout=\"vertical\" name=\"register-form\" onFinish={onSignUp}>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tlabel=\"Email\" \r\n\t\t\t\t\trules={rules.email}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input prefix={<MailOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tlabel=\"Password\" \r\n\t\t\t\t\trules={rules.password}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"confirm\" \r\n\t\t\t\t\tlabel=\"ConfirmPassword\" \r\n\t\t\t\t\trules={rules.confirm}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n\tconst { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsignUp,\r\n\tshowAuthMessage,\r\n\thideAuthMessage,\r\n\tshowLoading\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm)\r\n","import React from 'react'\r\nimport RegisterForm from '../../components/RegisterForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst RegisterOne = props => {\r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\"  style={{width:'150px'}}/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<RegisterForm {...props}/>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted\"> Already have  account please click here<a href=\"/auth/login\"> &nbsp;  &nbsp;login</a></p>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterOne\r\n"],"names":["rules","email","required","message","type","password","confirm","getFieldValue","validator","_","value","Promise","reject","resolve","mapDispatchToProps","signUp","showAuthMessage","hideAuthMessage","showLoading","connect","auth","loading","showMessage","token","redirect","props","allowRedirect","form","Form","navigate","useNavigate","useEffect","timer","setTimeout","clearTimeout","initial","opacity","marginBottom","animate","showIcon","layout","name","onFinish","validateFields","then","values","catch","info","console","log","label","hasFeedback","prefix","MailOutlined","className","LockOutlined","htmlType","block","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","theme","useSelector","state","currentTheme","style","justify","xs","sm","md","lg","src","alt","width","href"],"sourceRoot":""}